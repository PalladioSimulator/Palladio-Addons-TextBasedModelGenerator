import "std_definitions.tpcm"

repository MediaStore {	
	datatype FileContent {}
	datatype AudioCollectionRequest {
		Count PrimitiveTypes::Integer
		Size PrimitiveTypes::Integer
	}
	
	interface IFileStorage {
		op getFiles(audioRequest AudioCollectionRequest) FileContent
		op storeFile(file FileContent)
	}
	
	interface IDownload {
		op download(audioRequest AudioCollectionRequest) AudioCollectionRequest
	}
	
	interface IMediaAccess {
		op upload(file FileContent)
		op getFileList
	}
	
	interface IPackaging {
		op zip(audios AudioCollectionRequest) FileContent
	}
	
	interface IMeadiaManagement {
		op upload(file FileContent)
		op download(audioRequest AudioCollectionRequest)
		op getFileList
	}
	
	component EnqueueDownloadCache {
		provides prov IDownload
		requires serv IDownload
		requires cpu ICPU
		
		seff prov.download {
			cpu.process(«DoublePDF[(248240.0;0.0021638083026125983)(496480.0;0.8275364641769515)(744720.0;0.09104023080621894)(992960.0;0.047844205802211895)(1241200.0;0.021958647219105627)(1489440.0;0.0028850777368167975)(1737680.0;0.0016829620131431319)(1985920.0;7.212694342041994E-4)(2234160.0;3.2056419297964416E-4)(2482400.0;3.2056419297964416E-4)(2730640.0;2.4042314473473312E-4)(2978880.0;1.6028209648982208E-4)(3227120.0;8.014104824491104E-5)(3475360.0;8.014104824491104E-5)(3723600.0;0.0)(3971840.0;0.0)(4220080.0;0.0)(4468320.0;0.0)(4716560.0;8.014104824491104E-5)(4964800.0;8.014104824491104E-5)(5213040.0;8.014104824491104E-5)(5461280.0;1.6028209648982208E-4)(5709520.0;0.0)(5957760.0;8.014104824491104E-5)(6206000.0;8.014104824491104E-5)(6454240.0;1.6028209648982208E-4)(6702480.0;0.0)(6950720.0;8.014104824491104E-5)(7198960.0;0.0)(7447200.0;8.014104824491104E-5)(7695440.0;0.0)(7943680.0;8.014104824491104E-5)(8191920.0;0.0)(8440160.0;1.6028209648982208E-4)(8688400.0;8.014104824491104E-5)(8936640.0;0.0)(9184880.0;8.014104824491104E-5)(9433120.0;0.0)(9681360.0;8.014104824491104E-5)(9929600.0;8.014104824491104E-5)(1.017784E7;0.0)(1.042608E7;8.014104824491104E-5)(1.067432E7;8.014104824491104E-5)(1.092256E7;8.014104824491104E-5)(1.11708E7;8.014104824491104E-5)(1.141904E7;0.0)(1.166728E7;0.0)(1.191552E7;8.014104824491104E-5)(1.216376E7;0.0)(1.2412E7;0.0)(1.266024E7;0.0)(1.290848E7;0.0)(1.315672E7;0.0)(1.340496E7;0.0)(1.36532E7;0.0)(1.390144E7;0.0)(1.414968E7;0.0)(1.439792E7;0.0)(1.464616E7;0.0)(1.48944E7;0.0)(1.514264E7;0.0)(1.539088E7;8.014104824491104E-5)(1.563912E7;0.0)(1.588736E7;8.014104824491104E-5)(1.61356E7;0.0)(1.638384E7;8.014104824491104E-5)(1.663208E7;0.0)(1.688032E7;0.0)(1.712856E7;1.6028209648982208E-4)(1.73768E7;0.0)(1.762504E7;1.6028209648982208E-4)(1.787328E7;8.014104824491104E-5)(1.812152E7;0.0)(1.836976E7;0.0)(1.8618E7;0.0)(1.886624E7;8.014104824491104E-5)(1.911448E7;8.014104824491104E-5)(1.936272E7;0.0)(1.961096E7;8.014104824491104E-5)(1.98592E7;0.0)(2.010744E7;0.0)(2.035568E7;0.0)(2.060392E7;0.0)(2.085216E7;8.014104824491104E-5)(2.11004E7;0.0)(2.134864E7;0.0)(2.159688E7;0.0)(2.184512E7;0.0)(2.209336E7;0.0)(2.23416E7;0.0)(2.258984E7;0.0)(2.283808E7;0.0)(2.308632E7;0.0)(2.333456E7;0.0)(2.35828E7;0.0)(2.383104E7;0.0)(2.407928E7;0.0)(2.432752E7;8.014104824491104E-5)(2.457576E7;0.0)(2.4824E7;0.0)(2.507224E7;8.014104824491104E-5)]»)
			if «audioRequest.Count.VALUE == 1» {
				random {
					(0.4) {
						«audioRequest.Count.VALUE*audioRequest.Size.VALUE» -> .BYTESIZE
					}
					(0.6) {
						serv.download(audioRequest.Count.VALUE: «1», audioRequest.Size.VALUE:«audioRequest.Size.VALUE») -> .BYTESIZE
					}
				}
			} else if «audioRequest.Count.VALUE > 1» {
				serv.download(audioRequest.Count.VALUE: «audioRequest.Count.VALUE * 0.6», audioRequest.Size.VALUE:«audioRequest.Size.VALUE»)
				«audioRequest.Count.VALUE * audioRequest.Size.VALUE» -> .BYTESIZE
			}
		}
	}
	
	component InstantDownloadCache {
		provides prov IDownload
		requires serv IDownload
		requires cpu ICPU
		
		seff prov.download {
			cpu.process(«DoublePDF[(248240.0;0.0021638083026125983)(496480.0;0.8275364641769515)(744720.0;0.09104023080621894)(992960.0;0.047844205802211895)(1241200.0;0.021958647219105627)(1489440.0;0.0028850777368167975)(1737680.0;0.0016829620131431319)(1985920.0;7.212694342041994E-4)(2234160.0;3.2056419297964416E-4)(2482400.0;3.2056419297964416E-4)(2730640.0;2.4042314473473312E-4)(2978880.0;1.6028209648982208E-4)(3227120.0;8.014104824491104E-5)(3475360.0;8.014104824491104E-5)(3723600.0;0.0)(3971840.0;0.0)(4220080.0;0.0)(4468320.0;0.0)(4716560.0;8.014104824491104E-5)(4964800.0;8.014104824491104E-5)(5213040.0;8.014104824491104E-5)(5461280.0;1.6028209648982208E-4)(5709520.0;0.0)(5957760.0;8.014104824491104E-5)(6206000.0;8.014104824491104E-5)(6454240.0;1.6028209648982208E-4)(6702480.0;0.0)(6950720.0;8.014104824491104E-5)(7198960.0;0.0)(7447200.0;8.014104824491104E-5)(7695440.0;0.0)(7943680.0;8.014104824491104E-5)(8191920.0;0.0)(8440160.0;1.6028209648982208E-4)(8688400.0;8.014104824491104E-5)(8936640.0;0.0)(9184880.0;8.014104824491104E-5)(9433120.0;0.0)(9681360.0;8.014104824491104E-5)(9929600.0;8.014104824491104E-5)(1.017784E7;0.0)(1.042608E7;8.014104824491104E-5)(1.067432E7;8.014104824491104E-5)(1.092256E7;8.014104824491104E-5)(1.11708E7;8.014104824491104E-5)(1.141904E7;0.0)(1.166728E7;0.0)(1.191552E7;8.014104824491104E-5)(1.216376E7;0.0)(1.2412E7;0.0)(1.266024E7;0.0)(1.290848E7;0.0)(1.315672E7;0.0)(1.340496E7;0.0)(1.36532E7;0.0)(1.390144E7;0.0)(1.414968E7;0.0)(1.439792E7;0.0)(1.464616E7;0.0)(1.48944E7;0.0)(1.514264E7;0.0)(1.539088E7;8.014104824491104E-5)(1.563912E7;0.0)(1.588736E7;8.014104824491104E-5)(1.61356E7;0.0)(1.638384E7;8.014104824491104E-5)(1.663208E7;0.0)(1.688032E7;0.0)(1.712856E7;1.6028209648982208E-4)(1.73768E7;0.0)(1.762504E7;1.6028209648982208E-4)(1.787328E7;8.014104824491104E-5)(1.812152E7;0.0)(1.836976E7;0.0)(1.8618E7;0.0)(1.886624E7;8.014104824491104E-5)(1.911448E7;8.014104824491104E-5)(1.936272E7;0.0)(1.961096E7;8.014104824491104E-5)(1.98592E7;0.0)(2.010744E7;0.0)(2.035568E7;0.0)(2.060392E7;0.0)(2.085216E7;8.014104824491104E-5)(2.11004E7;0.0)(2.134864E7;0.0)(2.159688E7;0.0)(2.184512E7;0.0)(2.209336E7;0.0)(2.23416E7;0.0)(2.258984E7;0.0)(2.283808E7;0.0)(2.308632E7;0.0)(2.333456E7;0.0)(2.35828E7;0.0)(2.383104E7;0.0)(2.407928E7;0.0)(2.432752E7;8.014104824491104E-5)(2.457576E7;0.0)(2.4824E7;0.0)(2.507224E7;8.014104824491104E-5)]»)
			loop(«audioRequest.Count.VALUE») {
				random {
					(0.6) {
						serv.download(audioRequest.Count.VALUE: «1», audioRequest.Size.VALUE:«audioRequest.Size.VALUE»)
					}
				}
				«audioRequest.Count.VALUE * audioRequest.Size.VALUE» -> .BYTESIZE
			}
		}
	}
	
	component FileStorage {
		provides store IFileStorage
		requires cpu ICPU
		requires hdd IHDD
		
		seff store.getFiles {
			cpu.process(«audioRequest.Count.VALUE*75182981.91»)
			hdd.read(«audioRequest.Size.VALUE * audioRequest.Count.VALUE»)
			«audioRequest.Count.VALUE * audioRequest.Size.VALUE» -> .BYTESIZE
		}
		
		seff store.storeFile {
			cpu.process(«75182981.91»)
		}
	}
	
	component Packaging {
		provides packaging IPackaging
		requires cpu ICPU
		
		seff packaging.zip {
			cpu.process(«DoublePDF[(248240.0;0.0021638083026125983)(496480.0;0.8275364641769515)(744720.0;0.09104023080621894)(992960.0;0.047844205802211895)(1241200.0;0.021958647219105627)(1489440.0;0.0028850777368167975)(1737680.0;0.0016829620131431319)(1985920.0;7.212694342041994E-4)(2234160.0;3.2056419297964416E-4)(2482400.0;3.2056419297964416E-4)(2730640.0;2.4042314473473312E-4)(2978880.0;1.6028209648982208E-4)(3227120.0;8.014104824491104E-5)(3475360.0;8.014104824491104E-5)(3723600.0;0.0)(3971840.0;0.0)(4220080.0;0.0)(4468320.0;0.0)(4716560.0;8.014104824491104E-5)(4964800.0;8.014104824491104E-5)(5213040.0;8.014104824491104E-5)(5461280.0;1.6028209648982208E-4)(5709520.0;0.0)(5957760.0;8.014104824491104E-5)(6206000.0;8.014104824491104E-5)(6454240.0;1.6028209648982208E-4)(6702480.0;0.0)(6950720.0;8.014104824491104E-5)(7198960.0;0.0)(7447200.0;8.014104824491104E-5)(7695440.0;0.0)(7943680.0;8.014104824491104E-5)(8191920.0;0.0)(8440160.0;1.6028209648982208E-4)(8688400.0;8.014104824491104E-5)(8936640.0;0.0)(9184880.0;8.014104824491104E-5)(9433120.0;0.0)(9681360.0;8.014104824491104E-5)(9929600.0;8.014104824491104E-5)(1.017784E7;0.0)(1.042608E7;8.014104824491104E-5)(1.067432E7;8.014104824491104E-5)(1.092256E7;8.014104824491104E-5)(1.11708E7;8.014104824491104E-5)(1.141904E7;0.0)(1.166728E7;0.0)(1.191552E7;8.014104824491104E-5)(1.216376E7;0.0)(1.2412E7;0.0)(1.266024E7;0.0)(1.290848E7;0.0)(1.315672E7;0.0)(1.340496E7;0.0)(1.36532E7;0.0)(1.390144E7;0.0)(1.414968E7;0.0)(1.439792E7;0.0)(1.464616E7;0.0)(1.48944E7;0.0)(1.514264E7;0.0)(1.539088E7;8.014104824491104E-5)(1.563912E7;0.0)(1.588736E7;8.014104824491104E-5)(1.61356E7;0.0)(1.638384E7;8.014104824491104E-5)(1.663208E7;0.0)(1.688032E7;0.0)(1.712856E7;1.6028209648982208E-4)(1.73768E7;0.0)(1.762504E7;1.6028209648982208E-4)(1.787328E7;8.014104824491104E-5)(1.812152E7;0.0)(1.836976E7;0.0)(1.8618E7;0.0)(1.886624E7;8.014104824491104E-5)(1.911448E7;8.014104824491104E-5)(1.936272E7;0.0)(1.961096E7;8.014104824491104E-5)(1.98592E7;0.0)(2.010744E7;0.0)(2.035568E7;0.0)(2.060392E7;0.0)(2.085216E7;8.014104824491104E-5)(2.11004E7;0.0)(2.134864E7;0.0)(2.159688E7;0.0)(2.184512E7;0.0)(2.209336E7;0.0)(2.23416E7;0.0)(2.258984E7;0.0)(2.283808E7;0.0)(2.308632E7;0.0)(2.333456E7;0.0)(2.35828E7;0.0)(2.383104E7;0.0)(2.407928E7;0.0)(2.432752E7;8.014104824491104E-5)(2.457576E7;0.0)(2.4824E7;0.0)(2.507224E7;8.014104824491104E-5)]»)
			cpu.process(«1.0512 * audios.BYTESIZE») // + 400000000
		}
	}
	
	component MediaAccess {
		provides access IMediaAccess
		provides download IDownload
		requires storage IFileStorage
		requires cpu ICPU
		
		seff access.upload {
			cpu.process(«DoublePDF[(248240.0;0.0021638083026125983)(496480.0;0.8275364641769515)(744720.0;0.09104023080621894)(992960.0;0.047844205802211895)(1241200.0;0.021958647219105627)(1489440.0;0.0028850777368167975)(1737680.0;0.0016829620131431319)(1985920.0;7.212694342041994E-4)(2234160.0;3.2056419297964416E-4)(2482400.0;3.2056419297964416E-4)(2730640.0;2.4042314473473312E-4)(2978880.0;1.6028209648982208E-4)(3227120.0;8.014104824491104E-5)(3475360.0;8.014104824491104E-5)(3723600.0;0.0)(3971840.0;0.0)(4220080.0;0.0)(4468320.0;0.0)(4716560.0;8.014104824491104E-5)(4964800.0;8.014104824491104E-5)(5213040.0;8.014104824491104E-5)(5461280.0;1.6028209648982208E-4)(5709520.0;0.0)(5957760.0;8.014104824491104E-5)(6206000.0;8.014104824491104E-5)(6454240.0;1.6028209648982208E-4)(6702480.0;0.0)(6950720.0;8.014104824491104E-5)(7198960.0;0.0)(7447200.0;8.014104824491104E-5)(7695440.0;0.0)(7943680.0;8.014104824491104E-5)(8191920.0;0.0)(8440160.0;1.6028209648982208E-4)(8688400.0;8.014104824491104E-5)(8936640.0;0.0)(9184880.0;8.014104824491104E-5)(9433120.0;0.0)(9681360.0;8.014104824491104E-5)(9929600.0;8.014104824491104E-5)(1.017784E7;0.0)(1.042608E7;8.014104824491104E-5)(1.067432E7;8.014104824491104E-5)(1.092256E7;8.014104824491104E-5)(1.11708E7;8.014104824491104E-5)(1.141904E7;0.0)(1.166728E7;0.0)(1.191552E7;8.014104824491104E-5)(1.216376E7;0.0)(1.2412E7;0.0)(1.266024E7;0.0)(1.290848E7;0.0)(1.315672E7;0.0)(1.340496E7;0.0)(1.36532E7;0.0)(1.390144E7;0.0)(1.414968E7;0.0)(1.439792E7;0.0)(1.464616E7;0.0)(1.48944E7;0.0)(1.514264E7;0.0)(1.539088E7;8.014104824491104E-5)(1.563912E7;0.0)(1.588736E7;8.014104824491104E-5)(1.61356E7;0.0)(1.638384E7;8.014104824491104E-5)(1.663208E7;0.0)(1.688032E7;0.0)(1.712856E7;1.6028209648982208E-4)(1.73768E7;0.0)(1.762504E7;1.6028209648982208E-4)(1.787328E7;8.014104824491104E-5)(1.812152E7;0.0)(1.836976E7;0.0)(1.8618E7;0.0)(1.886624E7;8.014104824491104E-5)(1.911448E7;8.014104824491104E-5)(1.936272E7;0.0)(1.961096E7;8.014104824491104E-5)(1.98592E7;0.0)(2.010744E7;0.0)(2.035568E7;0.0)(2.060392E7;0.0)(2.085216E7;8.014104824491104E-5)(2.11004E7;0.0)(2.134864E7;0.0)(2.159688E7;0.0)(2.184512E7;0.0)(2.209336E7;0.0)(2.23416E7;0.0)(2.258984E7;0.0)(2.283808E7;0.0)(2.308632E7;0.0)(2.333456E7;0.0)(2.35828E7;0.0)(2.383104E7;0.0)(2.407928E7;0.0)(2.432752E7;8.014104824491104E-5)(2.457576E7;0.0)(2.4824E7;0.0)(2.507224E7;8.014104824491104E-5)]»)
			storage.storeFile(.BYTESIZE: «file.BYTESIZE»)
		}
		
		seff access.getFileList {
			cpu.process(«DoublePDF[(248240.0;0.0021638083026125983)(496480.0;0.8275364641769515)(744720.0;0.09104023080621894)(992960.0;0.047844205802211895)(1241200.0;0.021958647219105627)(1489440.0;0.0028850777368167975)(1737680.0;0.0016829620131431319)(1985920.0;7.212694342041994E-4)(2234160.0;3.2056419297964416E-4)(2482400.0;3.2056419297964416E-4)(2730640.0;2.4042314473473312E-4)(2978880.0;1.6028209648982208E-4)(3227120.0;8.014104824491104E-5)(3475360.0;8.014104824491104E-5)(3723600.0;0.0)(3971840.0;0.0)(4220080.0;0.0)(4468320.0;0.0)(4716560.0;8.014104824491104E-5)(4964800.0;8.014104824491104E-5)(5213040.0;8.014104824491104E-5)(5461280.0;1.6028209648982208E-4)(5709520.0;0.0)(5957760.0;8.014104824491104E-5)(6206000.0;8.014104824491104E-5)(6454240.0;1.6028209648982208E-4)(6702480.0;0.0)(6950720.0;8.014104824491104E-5)(7198960.0;0.0)(7447200.0;8.014104824491104E-5)(7695440.0;0.0)(7943680.0;8.014104824491104E-5)(8191920.0;0.0)(8440160.0;1.6028209648982208E-4)(8688400.0;8.014104824491104E-5)(8936640.0;0.0)(9184880.0;8.014104824491104E-5)(9433120.0;0.0)(9681360.0;8.014104824491104E-5)(9929600.0;8.014104824491104E-5)(1.017784E7;0.0)(1.042608E7;8.014104824491104E-5)(1.067432E7;8.014104824491104E-5)(1.092256E7;8.014104824491104E-5)(1.11708E7;8.014104824491104E-5)(1.141904E7;0.0)(1.166728E7;0.0)(1.191552E7;8.014104824491104E-5)(1.216376E7;0.0)(1.2412E7;0.0)(1.266024E7;0.0)(1.290848E7;0.0)(1.315672E7;0.0)(1.340496E7;0.0)(1.36532E7;0.0)(1.390144E7;0.0)(1.414968E7;0.0)(1.439792E7;0.0)(1.464616E7;0.0)(1.48944E7;0.0)(1.514264E7;0.0)(1.539088E7;8.014104824491104E-5)(1.563912E7;0.0)(1.588736E7;8.014104824491104E-5)(1.61356E7;0.0)(1.638384E7;8.014104824491104E-5)(1.663208E7;0.0)(1.688032E7;0.0)(1.712856E7;1.6028209648982208E-4)(1.73768E7;0.0)(1.762504E7;1.6028209648982208E-4)(1.787328E7;8.014104824491104E-5)(1.812152E7;0.0)(1.836976E7;0.0)(1.8618E7;0.0)(1.886624E7;8.014104824491104E-5)(1.911448E7;8.014104824491104E-5)(1.936272E7;0.0)(1.961096E7;8.014104824491104E-5)(1.98592E7;0.0)(2.010744E7;0.0)(2.035568E7;0.0)(2.060392E7;0.0)(2.085216E7;8.014104824491104E-5)(2.11004E7;0.0)(2.134864E7;0.0)(2.159688E7;0.0)(2.184512E7;0.0)(2.209336E7;0.0)(2.23416E7;0.0)(2.258984E7;0.0)(2.283808E7;0.0)(2.308632E7;0.0)(2.333456E7;0.0)(2.35828E7;0.0)(2.383104E7;0.0)(2.407928E7;0.0)(2.432752E7;8.014104824491104E-5)(2.457576E7;0.0)(2.4824E7;0.0)(2.507224E7;8.014104824491104E-5)]»)
		}
		
		seff download.download {
			cpu.process(«DoublePDF[(248240.0;0.0021638083026125983)(496480.0;0.8275364641769515)(744720.0;0.09104023080621894)(992960.0;0.047844205802211895)(1241200.0;0.021958647219105627)(1489440.0;0.0028850777368167975)(1737680.0;0.0016829620131431319)(1985920.0;7.212694342041994E-4)(2234160.0;3.2056419297964416E-4)(2482400.0;3.2056419297964416E-4)(2730640.0;2.4042314473473312E-4)(2978880.0;1.6028209648982208E-4)(3227120.0;8.014104824491104E-5)(3475360.0;8.014104824491104E-5)(3723600.0;0.0)(3971840.0;0.0)(4220080.0;0.0)(4468320.0;0.0)(4716560.0;8.014104824491104E-5)(4964800.0;8.014104824491104E-5)(5213040.0;8.014104824491104E-5)(5461280.0;1.6028209648982208E-4)(5709520.0;0.0)(5957760.0;8.014104824491104E-5)(6206000.0;8.014104824491104E-5)(6454240.0;1.6028209648982208E-4)(6702480.0;0.0)(6950720.0;8.014104824491104E-5)(7198960.0;0.0)(7447200.0;8.014104824491104E-5)(7695440.0;0.0)(7943680.0;8.014104824491104E-5)(8191920.0;0.0)(8440160.0;1.6028209648982208E-4)(8688400.0;8.014104824491104E-5)(8936640.0;0.0)(9184880.0;8.014104824491104E-5)(9433120.0;0.0)(9681360.0;8.014104824491104E-5)(9929600.0;8.014104824491104E-5)(1.017784E7;0.0)(1.042608E7;8.014104824491104E-5)(1.067432E7;8.014104824491104E-5)(1.092256E7;8.014104824491104E-5)(1.11708E7;8.014104824491104E-5)(1.141904E7;0.0)(1.166728E7;0.0)(1.191552E7;8.014104824491104E-5)(1.216376E7;0.0)(1.2412E7;0.0)(1.266024E7;0.0)(1.290848E7;0.0)(1.315672E7;0.0)(1.340496E7;0.0)(1.36532E7;0.0)(1.390144E7;0.0)(1.414968E7;0.0)(1.439792E7;0.0)(1.464616E7;0.0)(1.48944E7;0.0)(1.514264E7;0.0)(1.539088E7;8.014104824491104E-5)(1.563912E7;0.0)(1.588736E7;8.014104824491104E-5)(1.61356E7;0.0)(1.638384E7;8.014104824491104E-5)(1.663208E7;0.0)(1.688032E7;0.0)(1.712856E7;1.6028209648982208E-4)(1.73768E7;0.0)(1.762504E7;1.6028209648982208E-4)(1.787328E7;8.014104824491104E-5)(1.812152E7;0.0)(1.836976E7;0.0)(1.8618E7;0.0)(1.886624E7;8.014104824491104E-5)(1.911448E7;8.014104824491104E-5)(1.936272E7;0.0)(1.961096E7;8.014104824491104E-5)(1.98592E7;0.0)(2.010744E7;0.0)(2.035568E7;0.0)(2.060392E7;0.0)(2.085216E7;8.014104824491104E-5)(2.11004E7;0.0)(2.134864E7;0.0)(2.159688E7;0.0)(2.184512E7;0.0)(2.209336E7;0.0)(2.23416E7;0.0)(2.258984E7;0.0)(2.283808E7;0.0)(2.308632E7;0.0)(2.333456E7;0.0)(2.35828E7;0.0)(2.383104E7;0.0)(2.407928E7;0.0)(2.432752E7;8.014104824491104E-5)(2.457576E7;0.0)(2.4824E7;0.0)(2.507224E7;8.014104824491104E-5)]»)
			storage.getFiles(audioRequest.Count.VALUE: «audioRequest.Count.VALUE», audioRequest.Size.VALUE: «audioRequest.Size.VALUE») -> .BYTESIZE
		}
	}
	
	component MediaManagement {
		requires cpu ICPU
		provides management IMeadiaManagement
		requires download IDownload
		requires packaging IPackaging
		requires access IMediaAccess
	 	
		seff management.upload {
			cpu.process(«DoublePDF[(248240.0;0.0021638083026125983)(496480.0;0.8275364641769515)(744720.0;0.09104023080621894)(992960.0;0.047844205802211895)(1241200.0;0.021958647219105627)(1489440.0;0.0028850777368167975)(1737680.0;0.0016829620131431319)(1985920.0;7.212694342041994E-4)(2234160.0;3.2056419297964416E-4)(2482400.0;3.2056419297964416E-4)(2730640.0;2.4042314473473312E-4)(2978880.0;1.6028209648982208E-4)(3227120.0;8.014104824491104E-5)(3475360.0;8.014104824491104E-5)(3723600.0;0.0)(3971840.0;0.0)(4220080.0;0.0)(4468320.0;0.0)(4716560.0;8.014104824491104E-5)(4964800.0;8.014104824491104E-5)(5213040.0;8.014104824491104E-5)(5461280.0;1.6028209648982208E-4)(5709520.0;0.0)(5957760.0;8.014104824491104E-5)(6206000.0;8.014104824491104E-5)(6454240.0;1.6028209648982208E-4)(6702480.0;0.0)(6950720.0;8.014104824491104E-5)(7198960.0;0.0)(7447200.0;8.014104824491104E-5)(7695440.0;0.0)(7943680.0;8.014104824491104E-5)(8191920.0;0.0)(8440160.0;1.6028209648982208E-4)(8688400.0;8.014104824491104E-5)(8936640.0;0.0)(9184880.0;8.014104824491104E-5)(9433120.0;0.0)(9681360.0;8.014104824491104E-5)(9929600.0;8.014104824491104E-5)(1.017784E7;0.0)(1.042608E7;8.014104824491104E-5)(1.067432E7;8.014104824491104E-5)(1.092256E7;8.014104824491104E-5)(1.11708E7;8.014104824491104E-5)(1.141904E7;0.0)(1.166728E7;0.0)(1.191552E7;8.014104824491104E-5)(1.216376E7;0.0)(1.2412E7;0.0)(1.266024E7;0.0)(1.290848E7;0.0)(1.315672E7;0.0)(1.340496E7;0.0)(1.36532E7;0.0)(1.390144E7;0.0)(1.414968E7;0.0)(1.439792E7;0.0)(1.464616E7;0.0)(1.48944E7;0.0)(1.514264E7;0.0)(1.539088E7;8.014104824491104E-5)(1.563912E7;0.0)(1.588736E7;8.014104824491104E-5)(1.61356E7;0.0)(1.638384E7;8.014104824491104E-5)(1.663208E7;0.0)(1.688032E7;0.0)(1.712856E7;1.6028209648982208E-4)(1.73768E7;0.0)(1.762504E7;1.6028209648982208E-4)(1.787328E7;8.014104824491104E-5)(1.812152E7;0.0)(1.836976E7;0.0)(1.8618E7;0.0)(1.886624E7;8.014104824491104E-5)(1.911448E7;8.014104824491104E-5)(1.936272E7;0.0)(1.961096E7;8.014104824491104E-5)(1.98592E7;0.0)(2.010744E7;0.0)(2.035568E7;0.0)(2.060392E7;0.0)(2.085216E7;8.014104824491104E-5)(2.11004E7;0.0)(2.134864E7;0.0)(2.159688E7;0.0)(2.184512E7;0.0)(2.209336E7;0.0)(2.23416E7;0.0)(2.258984E7;0.0)(2.283808E7;0.0)(2.308632E7;0.0)(2.333456E7;0.0)(2.35828E7;0.0)(2.383104E7;0.0)(2.407928E7;0.0)(2.432752E7;8.014104824491104E-5)(2.457576E7;0.0)(2.4824E7;0.0)(2.507224E7;8.014104824491104E-5)]»)
			access.upload(file.BYTESIZE: «file.BYTESIZE»)
		}
		
		seff management.download {
			cpu.process(«DoublePDF[(248240.0;0.0021638083026125983)(496480.0;0.8275364641769515)(744720.0;0.09104023080621894)(992960.0;0.047844205802211895)(1241200.0;0.021958647219105627)(1489440.0;0.0028850777368167975)(1737680.0;0.0016829620131431319)(1985920.0;7.212694342041994E-4)(2234160.0;3.2056419297964416E-4)(2482400.0;3.2056419297964416E-4)(2730640.0;2.4042314473473312E-4)(2978880.0;1.6028209648982208E-4)(3227120.0;8.014104824491104E-5)(3475360.0;8.014104824491104E-5)(3723600.0;0.0)(3971840.0;0.0)(4220080.0;0.0)(4468320.0;0.0)(4716560.0;8.014104824491104E-5)(4964800.0;8.014104824491104E-5)(5213040.0;8.014104824491104E-5)(5461280.0;1.6028209648982208E-4)(5709520.0;0.0)(5957760.0;8.014104824491104E-5)(6206000.0;8.014104824491104E-5)(6454240.0;1.6028209648982208E-4)(6702480.0;0.0)(6950720.0;8.014104824491104E-5)(7198960.0;0.0)(7447200.0;8.014104824491104E-5)(7695440.0;0.0)(7943680.0;8.014104824491104E-5)(8191920.0;0.0)(8440160.0;1.6028209648982208E-4)(8688400.0;8.014104824491104E-5)(8936640.0;0.0)(9184880.0;8.014104824491104E-5)(9433120.0;0.0)(9681360.0;8.014104824491104E-5)(9929600.0;8.014104824491104E-5)(1.017784E7;0.0)(1.042608E7;8.014104824491104E-5)(1.067432E7;8.014104824491104E-5)(1.092256E7;8.014104824491104E-5)(1.11708E7;8.014104824491104E-5)(1.141904E7;0.0)(1.166728E7;0.0)(1.191552E7;8.014104824491104E-5)(1.216376E7;0.0)(1.2412E7;0.0)(1.266024E7;0.0)(1.290848E7;0.0)(1.315672E7;0.0)(1.340496E7;0.0)(1.36532E7;0.0)(1.390144E7;0.0)(1.414968E7;0.0)(1.439792E7;0.0)(1.464616E7;0.0)(1.48944E7;0.0)(1.514264E7;0.0)(1.539088E7;8.014104824491104E-5)(1.563912E7;0.0)(1.588736E7;8.014104824491104E-5)(1.61356E7;0.0)(1.638384E7;8.014104824491104E-5)(1.663208E7;0.0)(1.688032E7;0.0)(1.712856E7;1.6028209648982208E-4)(1.73768E7;0.0)(1.762504E7;1.6028209648982208E-4)(1.787328E7;8.014104824491104E-5)(1.812152E7;0.0)(1.836976E7;0.0)(1.8618E7;0.0)(1.886624E7;8.014104824491104E-5)(1.911448E7;8.014104824491104E-5)(1.936272E7;0.0)(1.961096E7;8.014104824491104E-5)(1.98592E7;0.0)(2.010744E7;0.0)(2.035568E7;0.0)(2.060392E7;0.0)(2.085216E7;8.014104824491104E-5)(2.11004E7;0.0)(2.134864E7;0.0)(2.159688E7;0.0)(2.184512E7;0.0)(2.209336E7;0.0)(2.23416E7;0.0)(2.258984E7;0.0)(2.283808E7;0.0)(2.308632E7;0.0)(2.333456E7;0.0)(2.35828E7;0.0)(2.383104E7;0.0)(2.407928E7;0.0)(2.432752E7;8.014104824491104E-5)(2.457576E7;0.0)(2.4824E7;0.0)(2.507224E7;8.014104824491104E-5)]»)
			download.download(audioRequest.Count.VALUE: «audioRequest.Count.VALUE», audioRequest.Size.VALUE: «audioRequest.Size.VALUE») -> return.BYTESIZE
			if «audioRequest.Count.VALUE == 1» {
				packaging.zip(.BYTESIZE: «return.BYTESIZE»)
			}
		}
		
		seff management.getFileList {
			cpu.process(«DoublePDF[(248240.0;0.0021638083026125983)(496480.0;0.8275364641769515)(744720.0;0.09104023080621894)(992960.0;0.047844205802211895)(1241200.0;0.021958647219105627)(1489440.0;0.0028850777368167975)(1737680.0;0.0016829620131431319)(1985920.0;7.212694342041994E-4)(2234160.0;3.2056419297964416E-4)(2482400.0;3.2056419297964416E-4)(2730640.0;2.4042314473473312E-4)(2978880.0;1.6028209648982208E-4)(3227120.0;8.014104824491104E-5)(3475360.0;8.014104824491104E-5)(3723600.0;0.0)(3971840.0;0.0)(4220080.0;0.0)(4468320.0;0.0)(4716560.0;8.014104824491104E-5)(4964800.0;8.014104824491104E-5)(5213040.0;8.014104824491104E-5)(5461280.0;1.6028209648982208E-4)(5709520.0;0.0)(5957760.0;8.014104824491104E-5)(6206000.0;8.014104824491104E-5)(6454240.0;1.6028209648982208E-4)(6702480.0;0.0)(6950720.0;8.014104824491104E-5)(7198960.0;0.0)(7447200.0;8.014104824491104E-5)(7695440.0;0.0)(7943680.0;8.014104824491104E-5)(8191920.0;0.0)(8440160.0;1.6028209648982208E-4)(8688400.0;8.014104824491104E-5)(8936640.0;0.0)(9184880.0;8.014104824491104E-5)(9433120.0;0.0)(9681360.0;8.014104824491104E-5)(9929600.0;8.014104824491104E-5)(1.017784E7;0.0)(1.042608E7;8.014104824491104E-5)(1.067432E7;8.014104824491104E-5)(1.092256E7;8.014104824491104E-5)(1.11708E7;8.014104824491104E-5)(1.141904E7;0.0)(1.166728E7;0.0)(1.191552E7;8.014104824491104E-5)(1.216376E7;0.0)(1.2412E7;0.0)(1.266024E7;0.0)(1.290848E7;0.0)(1.315672E7;0.0)(1.340496E7;0.0)(1.36532E7;0.0)(1.390144E7;0.0)(1.414968E7;0.0)(1.439792E7;0.0)(1.464616E7;0.0)(1.48944E7;0.0)(1.514264E7;0.0)(1.539088E7;8.014104824491104E-5)(1.563912E7;0.0)(1.588736E7;8.014104824491104E-5)(1.61356E7;0.0)(1.638384E7;8.014104824491104E-5)(1.663208E7;0.0)(1.688032E7;0.0)(1.712856E7;1.6028209648982208E-4)(1.73768E7;0.0)(1.762504E7;1.6028209648982208E-4)(1.787328E7;8.014104824491104E-5)(1.812152E7;0.0)(1.836976E7;0.0)(1.8618E7;0.0)(1.886624E7;8.014104824491104E-5)(1.911448E7;8.014104824491104E-5)(1.936272E7;0.0)(1.961096E7;8.014104824491104E-5)(1.98592E7;0.0)(2.010744E7;0.0)(2.035568E7;0.0)(2.060392E7;0.0)(2.085216E7;8.014104824491104E-5)(2.11004E7;0.0)(2.134864E7;0.0)(2.159688E7;0.0)(2.184512E7;0.0)(2.209336E7;0.0)(2.23416E7;0.0)(2.258984E7;0.0)(2.283808E7;0.0)(2.308632E7;0.0)(2.333456E7;0.0)(2.35828E7;0.0)(2.383104E7;0.0)(2.407928E7;0.0)(2.432752E7;8.014104824491104E-5)(2.457576E7;0.0)(2.4824E7;0.0)(2.507224E7;8.014104824491104E-5)]»)
			access.getFileList
		}
	}
}

resourceenvironment Environment {
	container ApplicationServer {
		processing CPU CPUResource (
			schedulingPolicy: ProcessorSharing
			processingRate: «1000*1000*1000»
		)
		
		processing HDD HDDResource (
			schedulingPolicy: FirstComeFirstServe
			processingRate: «50*1000*1000»
		)
	}
	
	container DatabaseServer {
		processing CPU CPUResource (
			schedulingPolicy: ProcessorSharing
			processingRate: «1000* 1000*1000»
		)
		
		processing HDD HDDResource (
			schedulingPolicy: FirstComeFirstServe
			processingRate: «600*1000*1000»
		)
	}
	
	link LAN Ethernet (
		latency: «Norm(0.07, 0.03)»
		throughput: «6.25 * 1000 * 1000»
	) ApplicationServer, DatabaseServer
}


system Cacheless {
	assembly FileStorageCacheless MediaStore::FileStorage
	assembly PackagingCacheless MediaStore::Packaging
	assembly MediaAccessCacheless MediaStore::MediaAccess
	assembly MediaManagementCacheless MediaStore::MediaManagement
	
	provides webGui MediaStore::IMeadiaManagement -> MediaManagementCacheless
	PackagingCacheless -> MediaManagementCacheless
	MediaAccessCacheless -> MediaManagementCacheless.access
	MediaAccessCacheless -> MediaManagementCacheless.download
	FileStorageCacheless -> MediaAccessCacheless.storage
}

allocation Cacheless {
	alloc AppServer (PackagingCacheless, MediaAccessCacheless, MediaManagementCacheless -> Environment::ApplicationServer)
	alloc DbServer (FileStorageCacheless -> Environment::DatabaseServer)
}

system EnqueueCacheSys {
	assembly FileStorageEnqueue MediaStore::FileStorage
	assembly PackagingEnqueue MediaStore::Packaging
	assembly MediaAccessEnqueue MediaStore::MediaAccess
	assembly MediaManagementEnqueue MediaStore::MediaManagement
	assembly Cache MediaStore::EnqueueDownloadCache
	
	provides webGui MediaStore::IMeadiaManagement -> MediaManagementEnqueue
	PackagingEnqueue -> MediaManagementEnqueue
	MediaAccessEnqueue -> MediaManagementEnqueue.access
	FileStorageEnqueue -> MediaAccessEnqueue.storage
	Cache -> MediaManagementEnqueue
	MediaAccessEnqueue -> Cache
}

allocation EnqueueCache {
	alloc AppServer (EnqueueCacheSys::PackagingEnqueue, EnqueueCacheSys::MediaAccessEnqueue, EnqueueCacheSys::MediaManagementEnqueue, EnqueueCacheSys::Cache -> Environment::ApplicationServer)
	alloc DbServer (EnqueueCacheSys::FileStorageEnqueue -> Environment::DatabaseServer)
}

system InstantDownloadSys {
	assembly FileStorageInstant MediaStore::FileStorage
	assembly PackagingInstant MediaStore::Packaging
	assembly MediaAccessInstant MediaStore::MediaAccess
	assembly MediaManagementInstant MediaStore::MediaManagement
	assembly Download MediaStore::InstantDownloadCache
	
	provides webGui MediaStore::IMeadiaManagement -> MediaManagementInstant
	PackagingInstant -> MediaManagementInstant
	MediaAccessInstant -> MediaManagementInstant.access
	FileStorageInstant -> MediaAccessInstant.storage
	Download -> MediaManagementInstant
	MediaAccessInstant -> Download
}
allocation InstantDownloadAlloc {
	alloc AppServer (InstantDownloadSys::PackagingInstant, InstantDownloadSys::MediaAccessInstant, InstantDownloadSys::MediaManagementInstant, InstantDownloadSys::Download -> Environment::ApplicationServer)
	alloc DbServer (InstantDownloadSys::FileStorageInstant -> Environment::DatabaseServer)
}

usage {
	"Realistic" interArrivalTime(«Exp(0.04)») {
		random {
			(0.8) {
				InstantDownloadSys::webGui.download(audioRequest.Count.VALUE: 
					«IntPMF[(1; 0.2)(2; 0.02)(3; 0.02)(4; 0.02)(5; 0.02)(6; 0.02)(7; 0.05)(8; 0.05)(9; 0.1)(10; 0.1)(11; 0.1)(12; 0.1)(13; 0.1)(14; 0.05)(15; 0.05)]», 
					audioRequest.Size.VALUE: 
					«IntPMF[(38303999; 0.142857)(38304000; 0.142857)(40568000; 0.142857)(41544000; 0.142857)(48280000; 0.142857)(65000000; 0.142857)(88216000; 0.142858)]»
				)
			}
			(0.2) {
				InstantDownloadSys::webGui.upload(file.BYTESIZE: 
					«IntPMF[(38303999; 0.142857)(38304000; 0.142857)(40568000; 0.142857)(41544000; 0.142857)(48280000; 0.142857)(65000000; 0.142857)(88216000; 0.142858)]»
				)
			}
		}
	}
}
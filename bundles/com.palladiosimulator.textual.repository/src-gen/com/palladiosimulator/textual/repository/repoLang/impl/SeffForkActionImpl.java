/**
 * generated by Xtext 2.17.0
 */
package com.palladiosimulator.textual.repository.repoLang.impl;

import com.palladiosimulator.textual.repository.repoLang.RepoLangPackage;
import com.palladiosimulator.textual.repository.repoLang.SeffFork;
import com.palladiosimulator.textual.repository.repoLang.SeffForkAction;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Seff Fork Action</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.palladiosimulator.textual.repository.repoLang.impl.SeffForkActionImpl#isSync <em>Sync</em>}</li>
 *   <li>{@link com.palladiosimulator.textual.repository.repoLang.impl.SeffForkActionImpl#getForks <em>Forks</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SeffForkActionImpl extends SeffActionImpl implements SeffForkAction
{
  /**
   * The default value of the '{@link #isSync() <em>Sync</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isSync()
   * @generated
   * @ordered
   */
  protected static final boolean SYNC_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isSync() <em>Sync</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isSync()
   * @generated
   * @ordered
   */
  protected boolean sync = SYNC_EDEFAULT;

  /**
   * The cached value of the '{@link #getForks() <em>Forks</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getForks()
   * @generated
   * @ordered
   */
  protected EList<SeffFork> forks;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SeffForkActionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RepoLangPackage.Literals.SEFF_FORK_ACTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isSync()
  {
    return sync;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSync(boolean newSync)
  {
    boolean oldSync = sync;
    sync = newSync;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RepoLangPackage.SEFF_FORK_ACTION__SYNC, oldSync, sync));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<SeffFork> getForks()
  {
    if (forks == null)
    {
      forks = new EObjectContainmentEList<SeffFork>(SeffFork.class, this, RepoLangPackage.SEFF_FORK_ACTION__FORKS);
    }
    return forks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case RepoLangPackage.SEFF_FORK_ACTION__FORKS:
        return ((InternalEList<?>)getForks()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RepoLangPackage.SEFF_FORK_ACTION__SYNC:
        return isSync();
      case RepoLangPackage.SEFF_FORK_ACTION__FORKS:
        return getForks();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RepoLangPackage.SEFF_FORK_ACTION__SYNC:
        setSync((Boolean)newValue);
        return;
      case RepoLangPackage.SEFF_FORK_ACTION__FORKS:
        getForks().clear();
        getForks().addAll((Collection<? extends SeffFork>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RepoLangPackage.SEFF_FORK_ACTION__SYNC:
        setSync(SYNC_EDEFAULT);
        return;
      case RepoLangPackage.SEFF_FORK_ACTION__FORKS:
        getForks().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RepoLangPackage.SEFF_FORK_ACTION__SYNC:
        return sync != SYNC_EDEFAULT;
      case RepoLangPackage.SEFF_FORK_ACTION__FORKS:
        return forks != null && !forks.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (sync: ");
    result.append(sync);
    result.append(')');
    return result.toString();
  }

} //SeffForkActionImpl

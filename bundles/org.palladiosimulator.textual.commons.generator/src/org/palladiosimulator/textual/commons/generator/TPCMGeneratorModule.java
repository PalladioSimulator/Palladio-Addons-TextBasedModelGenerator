/*
 * generated by Xtext 2.21.0
 */
package org.palladiosimulator.textual.commons.generator;

import org.eclipse.xtext.service.AbstractGenericModule;
import org.eclipse.xtext.service.SingletonBinding;
import org.palladiosimulator.textual.commons.generator.impl.ExtensibleMultiModelGenerator;
import org.palladiosimulator.textual.commons.generator.impl.ModelFileExtensionRegistryImpl;
import org.palladiosimulator.textual.commons.generator.registry.GeneratorRuleRegistrationFacade;
import org.palladiosimulator.textual.commons.generator.registry.GeneratorTransformationRegistry;
import org.palladiosimulator.textual.commons.generator.registry.GeneratorRulesRegistrationDelegatesProvider;
import org.palladiosimulator.textual.commons.generator.registry.impl.ExtensionPointTransformationRegistryConfigurerProvider;
import org.palladiosimulator.textual.commons.generator.registry.impl.GeneratorTransformationRegistryImpl;

import com.google.inject.Binder;
/**
 * Use this class to register components to be used at runtime / without the
 * Equinox extension registry.
 */
public class TPCMGeneratorModule extends AbstractGenericModule {
    
    @Override
    public void configure(Binder binder) {
        super.configure(binder);
    }
	
    @SingletonBinding
    public Class<ModelFileExtensionRegistryImpl> bindModelFileExtensionRegistryImpl() {
        return ModelFileExtensionRegistryImpl.class;
    }
    
    public Class<? extends ModelFileExtensionRegistry> bindModelFileExtensionRegistry() {
        return ModelFileExtensionRegistryImpl.class;
    }
    
    public Class<? extends ModelFileExtensionRegistry> bindModelFileExtensionRegistrationFacade() {
        return ModelFileExtensionRegistryImpl.class;
    }
    
	public Class<? extends MultiSourceGenerator> bindIGenerator() {
		return ExtensibleMultiModelGenerator.class;
	}
	
	public Class<? extends GeneratorRulesRegistrationDelegatesProvider> bindConfigurerProvider() {
		return ExtensionPointTransformationRegistryConfigurerProvider.class;
	}
	
    @SingletonBinding
    public Class<GeneratorTransformationRegistryImpl> bindGeneratorTransformationRegistryImpl() {
        return GeneratorTransformationRegistryImpl.class;
    }
    
    public Class<? extends GeneratorRuleRegistrationFacade> bindGeneratorRuleRegistrationFacade() {
        return GeneratorTransformationRegistryImpl.class;
    }
    
	public Class<? extends GeneratorTransformationRegistry> bindTransformationRegistry() {
		return GeneratorTransformationRegistryImpl.class;
	}
}

/*
 * generated by Xtext 2.21.0
 */
package org.palladiosimulator.textual.tpcm;

import org.eclipse.xtext.naming.IQualifiedNameConverter;
import org.eclipse.xtext.naming.IQualifiedNameProvider;
import org.eclipse.xtext.resource.IDefaultResourceDescriptionStrategy;
import org.eclipse.xtext.scoping.IGlobalScopeProvider;
import org.palladiosimulator.textual.tpcm.generator.GenerationFileNameProvider;
import org.palladiosimulator.textual.tpcm.generator.GenerationFileNameProviderImpl;
import org.palladiosimulator.textual.tpcm.generator.MultiSourceGenerator;
import org.palladiosimulator.textual.tpcm.generator.TPCMGenerator;
import org.palladiosimulator.textual.tpcm.naming.TPCMQualifiedNameConverter;
import org.palladiosimulator.textual.tpcm.naming.TPCMQualifiedNameProvider;
import org.palladiosimulator.textual.tpcm.registry.TransformationRegistryConfigurerHandler;
import org.palladiosimulator.textual.tpcm.resource.TPCMResourceDescriptionStrategy;
import org.palladiosimulator.textual.tpcm.scoping.TPCMImportUriGlobalScopeProvider;

import com.google.inject.Binder;

/**
 * Use this class to register components to be used at runtime / without the
 * Equinox extension registry.
 */
public class TPCMRuntimeModule extends AbstractTPCMRuntimeModule {
	
	@Override
	public Class<? extends IQualifiedNameProvider> bindIQualifiedNameProvider() {
		return TPCMQualifiedNameProvider.class;
	}

	public Class<? extends IQualifiedNameConverter> bindIQualifiedNameConverter() {
		return TPCMQualifiedNameConverter.class;
	}
	
	@Override
	public Class<? extends IGlobalScopeProvider> bindIGlobalScopeProvider() {
		return TPCMImportUriGlobalScopeProvider.class;
	}
	
	public Class<? extends IDefaultResourceDescriptionStrategy> bindIDefaultResourceDescriptionStrategy() {
		return TPCMResourceDescriptionStrategy.class;
	}
	
	public Class<? extends MultiSourceGenerator> bindIGenerator() {
		return TPCMGenerator.class;
	}
	
	public Class<? extends GenerationFileNameProvider> bindFileNameProvider() {
		return GenerationFileNameProviderImpl.class;
	}
	
	@Override
	public void configure(Binder binder) {
		// TODO Auto-generated method stub
		super.configure(binder);
		TransformationRegistryConfigurerHandler.execute();
	}
}
